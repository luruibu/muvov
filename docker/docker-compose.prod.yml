# 生产环境 Docker Compose 配置

services:
  # Caddy 反向代理和自动 HTTPS
  caddy:
    image: caddy:2-alpine
    container_name: muvov-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - ../dist:/srv/muvov:ro
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - peerjs-server
    networks:
      - muvov-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:2019/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PeerJS 信令服务器
  peerjs-server:
    build:
      context: .
      dockerfile: Dockerfile.peerjs
    container_name: muvov-peerjs
    restart: unless-stopped
    environment:
      - PORT=9000
      - KEY=${PEERJS_KEY:-muvov}
      - PATH=${PEERJS_PATH:-/peerjs}
      - EXTRA_ARGS=--concurrent_limit 5000
    expose:
      - "9000"
    networks:
      - muvov-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9000${PEERJS_PATH:-/peerjs}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CoTURN STUN/TURN 服务器
  coturn:
    image: coturn/coturn:latest
    container_name: muvov-coturn
    restart: unless-stopped
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
      - "${TURN_MIN_PORT:-49152}-${TURN_MAX_PORT:-65535}:${TURN_MIN_PORT:-49152}-${TURN_MAX_PORT:-65535}/udp"
    volumes:
      - ./turnserver.conf:/etc/coturn/turnserver.conf:ro
      - caddy_data:/etc/ssl/caddy:ro
      - coturn_logs:/var/log
    environment:
      - DOMAIN=${DOMAIN}
      - COTURN_SECRET=${COTURN_SECRET:-muvov-secret-key}
    depends_on:
      - caddy
    networks:
      - muvov-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "turnutils_uclient", "-t", "-T", "-u", "test", "-w", "test", "127.0.0.1"]
      interval: 60s
      timeout: 30s
      retries: 3

  # 日志收集器（可选）
  log-collector:
    image: fluent/fluent-bit:latest
    container_name: muvov-logs
    restart: unless-stopped
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - caddy_data:/var/log/caddy:ro
      - coturn_logs:/var/log/coturn:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - muvov-network
    depends_on:
      - caddy
      - coturn
      - peerjs-server
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  coturn_logs:
    driver: local

networks:
  muvov-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
        - subnet: 2001:db8::/64